<UserControl
    x:Class="ChatUI.CustomControls.MenuListControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:ChatUI.ViewModels"
    x:Name="menuList"
    Width="Auto"
    Height="Auto"
    d:Background="#2A2E4D"
    d:DataContext="{d:DesignInstance vm:MainWindowViewModel,
                                     IsDesignTimeCreatable=True}"
    d:Width="95"
    mc:Ignorable="d">

    <UserControl.Resources>

        <Style x:Key="ChatListBox" TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="Focusable" Value="False" />
        </Style>

        <DropShadowEffect
            x:Key="DropShadowInd"
            BlurRadius="10"
            Direction="360"
            ShadowDepth="3"
            Color="#F54A4A" />

        <!--#region Indicator Style-->

        <Style x:Key="IndicatorStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#F54A4A" />
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}}" />
            <Setter Property="Width" Value="4" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="HorizontalAlignment" Value="Left" />

            <!--  Shadow Effect for out indicator  -->
            <Setter Property="Effect" Value="{StaticResource DropShadowInd}" />

            <!--  But since we want our indicator to be visible only on mouse hover or list item selection  -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--#endregion-->

        <!--#region Path Style which will be our Icon-->
        <Style x:Key="PathStyle" TargetType="{x:Type Path}">
            <Setter Property="Fill" Value="#686D83" />
            <Setter Property="Width" Value="26" />
            <Setter Property="Stretch" Value="Uniform" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Fill" Value="White" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                    <Setter Property="Fill" Value="White" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region Styling Listbox Item-->

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Height" Value="74" />

            <!--  To set the selected menu item on startup  -->
            <Setter Property="IsSelected" Value="{Binding IsItemSelected}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border
                            x:Name="border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                            <Grid Margin="-4,0,0,0">

                                <!--#region Left Side Indicator for our Button-->
                                <Border Style="{StaticResource IndicatorStyle}" />
                                <!--#endregion-->

                                <!--#region Path Icon-->
                                <Path Data="{Binding PathData}" Style="{StaticResource PathStyle}" />
                                <!--#endregion-->
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding ListItemHeight}" Value="130">
                                <Setter Property="Height" Value="130" />
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#endregion-->
    </UserControl.Resources>

    <ListBox ItemsSource="{Binding ItemList}" Style="{StaticResource ChatListBox}" />
</UserControl>