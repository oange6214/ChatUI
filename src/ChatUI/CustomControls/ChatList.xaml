<UserControl
    x:Class="ChatUI.CustomControls.ChatList"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:customcontrols="clr-namespace:ChatUI.CustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:ChatUI.ViewModels"
    Width="auto"
    Height="auto"
    d:DataContext="{d:DesignInstance vm:MainWindowViewModel,
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">

    <UserControl.Resources>

        <Style x:Key="ChatListBackgroundStyle" TargetType="{x:Type Border}">
            <Setter Property="CornerRadius" Value="6" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Focusable" Value="False" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                    <Setter Property="Background" Value="#2A2E4D" />
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                    <Setter Property="Background" Value="#2A2E4D" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DropShadowEffect
            x:Key="DropShadow"
            BlurRadius="10"
            Direction="360"
            ShadowDepth="3"
            Color="#F54A4A" />

        <Style x:Key="ChatIndicatorStyle" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Height" Value="{Binding Height, RelativeSource={RelativeSource AncestorType={x:Type Border}, Mode=FindAncestor}}" />
            <Setter Property="Width" Value="4" />
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="Effect" Value="{StaticResource DropShadow}" />

            <!--  Mouse Triggers to change background color and show/hide indicator like...  -->
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                    <Setter Property="Background" Value="#F54A4A" />
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>

                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                    <Setter Property="Background" Value="#F54A4A" />
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Height" Value="145" />
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="0,0,0,20" />

            <!--  Like we did in our previous Menu List Control  -->
            <Setter Property="IsSelected" Value="{Binding IsChatSelected}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border
                            x:Name="bd"
                            HorizontalAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            SnapsToDevicePixels="True">

                            <!--  Since we want our List Item to change color on mouse over we will style this border for so.  -->
                            <Border
                                x:Name="border"
                                SnapsToDevicePixels="True"
                                Style="{StaticResource ChatListBackgroundStyle}">

                                <Grid>
                                    <!--#region Indicator-->

                                    <Border
                                        x:Name="ChatIndicatorRight"
                                        CornerRadius="6 0 0 6"
                                        Style="{StaticResource ChatIndicatorStyle}" />

                                    <!--#endregion-->

                                    <!--  To add profile pic and name, messages etc  -->
                                    <StackPanel Orientation="Vertical">
                                        <Grid Margin="28,30,30,16">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="*" />
                                            </Grid.RowDefinitions>

                                            <!--#region Profile pic-->

                                            <customcontrols:RoundProfileButton IsOnline="{Binding IsOnline}" ProfileImageSource="{Binding ContactProfilePicUri}" />

                                            <!--#endregion-->

                                            <!--#region Contact Name & Availability Status-->
                                            <Grid Grid.Column="1" Margin="13,0,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="auto" />
                                                    <RowDefinition Height="auto" />
                                                </Grid.RowDefinitions>

                                                <!--
                                                    We are using DataContext binding again in this UserControl to achieve
                                                    same data target like before, all steps are same after you are done with this template ...
                                                -->

                                                <TextBlock
                                                    FontSize="16"
                                                    FontWeight="Bold"
                                                    Text="{Binding ContactName}">
                                                    <TextBlock.Style>
                                                        <!--  Since the text color is supposed to change on move over and item selected event.  -->

                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>

                                                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>

                                                <!--  Last Message Time  -->
                                                <TextBlock
                                                    HorizontalAlignment="Right"
                                                    FontSize="14"
                                                    Foreground="#B7B5B8"
                                                    Text="{Binding LastMessageTime}" />

                                                <!--  Contact Availability  -->
                                                <TextBlock
                                                    Grid.Row="1"
                                                    FontSize="14"
                                                    Foreground="#B7B5B8"
                                                    Text="{Binding Availability}" />
                                            </Grid>

                                            <!--#endregion-->
                                        </Grid>

                                        <!--
                                            Now what we are going to do is take 3 columns for our replied Icon, last message sent &
                                            if we received the messages from contact that is .. that count (2) as in picture.
                                        -->

                                        <Grid Width="330" Margin="28,0,28,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="auto" />
                                                <ColumnDefinition Width="auto" />
                                            </Grid.ColumnDefinitions>

                                            <!--  This image will be shown if wee have sent the last message  -->
                                            <Image
                                                x:Name="MsgSent"
                                                Grid.Column="0"
                                                Width="20"
                                                Source="/Assets/Images/right.png"
                                                Stretch="Uniform">
                                                <Image.Style>
                                                    <!--
                                                        As we intent to only show this icon when we replied so we will need to add trigger to achieve that,
                                                        so we will bind its visibility to message count's visibility if the count is visible that our image
                                                        will be hidden n vice versa.
                                                    -->

                                                    <Style TargetType="{x:Type Image}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ElementName=MsgCount, Path=Visibility}" Value="Visibile">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ElementName=IsRead}" Value="true">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>

                                            <!--  Message  -->
                                            <TextBlock
                                                Grid.Column="1"
                                                Margin="5,0,0,0"
                                                VerticalAlignment="Center"
                                                FontSize="14"
                                                Text="{Binding Message}">
                                                <TextBlock.Style>
                                                    <!--  Since the text color is supposed to change on move over and item selected event  -->

                                                    <Style TargetType="{x:Type TextBlock}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                                                                <Setter Property="Foreground" Value="White" />
                                                            </DataTrigger>

                                                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="true">
                                                                <Setter Property="Foreground" Value="White" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>

                                            <!--  Message Count  -->
                                            <!--  This will appear only on new message arrival from contact.  -->
                                            <Grid
                                                x:Name="MsgCount"
                                                Grid.Column="2"
                                                Margin="10,0,0,0">
                                                <Grid.Style>
                                                    <Style TargetType="{x:Type Grid}">
                                                        <Setter Property="Visibility" Value="Visible" />
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding NewMsgCount}" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Collapsed" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>

                                                <!--  Outer Circle  -->
                                                <Ellipse
                                                    Width="25"
                                                    Height="25"
                                                    Fill="#F54A4A" />

                                                <!--  Count Text Inside  -->
                                                <TextBlock
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    FontSize="14"
                                                    Foreground="White"
                                                    Text="{Binding NewMsgCount}" />
                                            </Grid>
                                        </Grid>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ChatListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="Focusable" Value="False" />
        </Style>
    </UserControl.Resources>

    <ListBox ItemsSource="{Binding ChatItemList}" Style="{StaticResource ChatListBoxStyle}" />
</UserControl>